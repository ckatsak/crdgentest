//
// CHRISTOULAS MATHAFAQUERS
//

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/ckatsak/crdgentest/pkg/apis/tests.ckatsak/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DisttateLister helps list Disttates.
type DisttateLister interface {
	// List lists all Disttates in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Disttate, err error)
	// Disttates returns an object that can list and get Disttates.
	Disttates(namespace string) DisttateNamespaceLister
	DisttateListerExpansion
}

// disttateLister implements the DisttateLister interface.
type disttateLister struct {
	indexer cache.Indexer
}

// NewDisttateLister returns a new DisttateLister.
func NewDisttateLister(indexer cache.Indexer) DisttateLister {
	return &disttateLister{indexer: indexer}
}

// List lists all Disttates in the indexer.
func (s *disttateLister) List(selector labels.Selector) (ret []*v1alpha1.Disttate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Disttate))
	})
	return ret, err
}

// Disttates returns an object that can list and get Disttates.
func (s *disttateLister) Disttates(namespace string) DisttateNamespaceLister {
	return disttateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DisttateNamespaceLister helps list and get Disttates.
type DisttateNamespaceLister interface {
	// List lists all Disttates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Disttate, err error)
	// Get retrieves the Disttate from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Disttate, error)
	DisttateNamespaceListerExpansion
}

// disttateNamespaceLister implements the DisttateNamespaceLister
// interface.
type disttateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Disttates in the indexer for a given namespace.
func (s disttateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Disttate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Disttate))
	})
	return ret, err
}

// Get retrieves the Disttate from the indexer for a given namespace and name.
func (s disttateNamespaceLister) Get(name string) (*v1alpha1.Disttate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("disttate"), name)
	}
	return obj.(*v1alpha1.Disttate), nil
}
